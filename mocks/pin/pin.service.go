// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/pin/pin.service.go

// Package mock_pin is a generated GoMock package.
package mock_pin

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "github.com/isd-sgcu/rpkm67-go-proto/rpkm67/backend/pin/v1"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// FindAll mocks base method.
func (m *MockService) FindAll(arg0 context.Context, arg1 *v1.FindAllPinRequest) (*v1.FindAllPinResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAll", arg0, arg1)
	ret0, _ := ret[0].(*v1.FindAllPinResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindAll indicates an expected call of FindAll.
func (mr *MockServiceMockRecorder) FindAll(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAll", reflect.TypeOf((*MockService)(nil).FindAll), arg0, arg1)
}

// ResetPin mocks base method.
func (m *MockService) ResetPin(arg0 context.Context, arg1 *v1.ResetPinRequest) (*v1.ResetPinResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResetPin", arg0, arg1)
	ret0, _ := ret[0].(*v1.ResetPinResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ResetPin indicates an expected call of ResetPin.
func (mr *MockServiceMockRecorder) ResetPin(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResetPin", reflect.TypeOf((*MockService)(nil).ResetPin), arg0, arg1)
}

// mustEmbedUnimplementedPinServiceServer mocks base method.
func (m *MockService) mustEmbedUnimplementedPinServiceServer() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "mustEmbedUnimplementedPinServiceServer")
}

// mustEmbedUnimplementedPinServiceServer indicates an expected call of mustEmbedUnimplementedPinServiceServer.
func (mr *MockServiceMockRecorder) mustEmbedUnimplementedPinServiceServer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mustEmbedUnimplementedPinServiceServer", reflect.TypeOf((*MockService)(nil).mustEmbedUnimplementedPinServiceServer))
}
